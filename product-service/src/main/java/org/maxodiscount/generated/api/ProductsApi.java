/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (5.1.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package org.maxodiscount.generated.api;

import org.maxodiscount.generated.model.Product;
import io.swagger.annotations.*;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;
import springfox.documentation.annotations.ApiIgnore;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2023-11-24T17:49:14.350323800+01:00[Europe/Paris]")
@Validated
@Api(value = "products", description = "the products API")
public interface ProductsApi {

    /**
     * GET /products/{productId} : Récupérer un produit par ID
     *
     * @param productId ID du produit (required)
     * @return Produit récupéré avec succès (status code 200)
     */
    @ApiOperation(value = "Récupérer un produit par ID", nickname = "getProduct", notes = "", response = Product.class, tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Produit récupéré avec succès", response = Product.class) })
    @GetMapping(
        value = "/products/{productId}",
        produces = { "application/json" }
    )
    ResponseEntity<Product> getProduct(@ApiParam(value = "ID du produit",required=true) @PathVariable("productId") Integer productId);


    /**
     * GET /products : Récupérer la liste des produits
     *
     * @return Liste des produits récupérée avec succès (status code 200)
     */
    @ApiOperation(value = "Récupérer la liste des produits", nickname = "getProducts", notes = "", response = Product.class, responseContainer = "List", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Liste des produits récupérée avec succès", response = Product.class, responseContainer = "List") })
    @GetMapping(
        value = "/products",
        produces = { "application/json" }
    )
    ResponseEntity<List<Product>> getProducts();

}
